package login_register_with_text_file;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.BufferedReader;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class AddAndRemove extends javax.swing.JFrame {

        Message_Frame msgF = new Message_Frame();
        ArrayList<Doctor> doctors;
        ArrayList<Patient> patients;
        public static ArrayList<String> name = new ArrayList<String>();
        public static List<String> departman = new ArrayList<String>();
        public static List<String> location  = new ArrayList<String>();
        public String AddDoctorLocation=null;
  

        public int val=0;
        public void close() {
        WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }

        
      
    public AddAndRemove() {
        initComponents();
        doctors = new ArrayList<Doctor>();
        patients = new ArrayList<Patient>();
        populateArrayList();
        //List<String> name = new ArrayList<>(Arrays.asList());
        //List<String> departman = new ArrayList<>(Arrays.asList());

        

        for(int i=0;i<doctors.size();i++){
            if(!name.contains(doctors.get(i).getName())){
                name.add(doctors.get(i).getName());
                
                
                System.out.println(doctors.get(i).getpassword());
                System.out.println(doctors.get(i).getıd());
            }
            if(!location.contains(doctors.get(i).getlocation())){
                location.add(doctors.get(i).getlocation());
                System.out.println(location);}
            
            if(!departman.contains(doctors.get(i).getDepartment())){
                departman.add(doctors.get(i).getDepartment());
                System.out.println(departman);}
            
                
        }
        
        
    }
   
    public void saveEmployeesToFile(){
        try {
            FileOutputStream fileEmployee = new FileOutputStream("Doctor.dat");
            ObjectOutputStream outputFileEmployee = new ObjectOutputStream(fileEmployee);
            
            for (int i = 0; i<doctors.size(); i++){
                outputFileEmployee.writeObject(doctors.get(i));
            }
            outputFileEmployee.close();
            msgF.jLabel_message.setText("Successfully saved!");
            msgF.setVisible(true);


        } catch (IOException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    public void populateArrayList(){
        
        try {
            FileInputStream fileEmployee = new FileInputStream("Doctor.dat");
            ObjectInputStream inputFileEmployee = new ObjectInputStream(fileEmployee);
            
            boolean endOfFile = false;
            while (!endOfFile){
                try {
                    doctors.add((Doctor) inputFileEmployee.readObject());
                } catch (EOFException e){
                    endOfFile = true;
                } catch (Exception f) {
                    JOptionPane.showMessageDialog(null, f.getMessage());
                }
            }
            inputFileEmployee.close();            
        } catch (IOException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_AddDoctorDepartman = new javax.swing.JTextField();
        tf_AddDoctorName = new javax.swing.JTextField();
        tf_AddDoctorAge = new javax.swing.JTextField();
        tf_AddDoctorId = new javax.swing.JTextField();
        AddDoctorSaveButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        cb_RemoveDoctorLocation = new javax.swing.JComboBox<>();
        cb_RemoveDoctorDepartman = new javax.swing.JComboBox<>();
        cb_RemoveName = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        tf_AddDoctorEmail = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tf_AddDoctorLocation = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        tf_AddDoctorPassword = new javax.swing.JPasswordField();

        tf_AddDoctorDepartman.setText("Text Departman");
        tf_AddDoctorDepartman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_AddDoctorDepartmanActionPerformed(evt);
            }
        });

        tf_AddDoctorName.setText("Text Name");
        tf_AddDoctorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_AddDoctorNameActionPerformed(evt);
            }
        });

        tf_AddDoctorAge.setText("Text Age");

        tf_AddDoctorId.setText("Text Id");
        tf_AddDoctorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_AddDoctorIdActionPerformed(evt);
            }
        });

        AddDoctorSaveButton.setText("Save");
        AddDoctorSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDoctorSaveButtonActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        cb_RemoveDoctorLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Location", "Atasehir", "Mecidiyeköy", "Pendik" }));
        cb_RemoveDoctorLocation.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_RemoveDoctorLocationİtemStateChanged(evt);
            }
        });
        cb_RemoveDoctorLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_RemoveDoctorLocationActionPerformed(evt);
            }
        });

        cb_RemoveName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_RemoveNameİtemStateChanged(evt);
            }
        });
        cb_RemoveName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_RemoveNameActionPerformed(evt);
            }
        });

        jLabel1.setText("Location:");

        jLabel2.setText("Departman:");

        jLabel3.setText("Name:");

        jButton1.setText("Remove");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tf_AddDoctorEmail.setText("Text Email");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Remove Doctor");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("Add Doctor");

        tf_AddDoctorLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ataşehir", "Mecidiyeköy", "Pendik" }));

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tf_AddDoctorPassword.setText("sdasad");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(76, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(74, 74, 74))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tf_AddDoctorDepartman)
                                    .addComponent(tf_AddDoctorName)
                                    .addComponent(tf_AddDoctorAge)
                                    .addComponent(tf_AddDoctorId)
                                    .addComponent(tf_AddDoctorEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(AddDoctorSaveButton))
                                    .addComponent(tf_AddDoctorLocation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tf_AddDoctorPassword))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_RemoveName, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_RemoveDoctorDepartman, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_RemoveDoctorLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jButton1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel4)))
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_RemoveDoctorLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_RemoveName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cb_RemoveDoctorDepartman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(108, 108, 108))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(tf_AddDoctorDepartman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tf_AddDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_AddDoctorAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tf_AddDoctorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tf_AddDoctorPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(tf_AddDoctorLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(tf_AddDoctorEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AddDoctorSaveButton)
                        .addGap(27, 27, 27))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_AddDoctorDepartmanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_AddDoctorDepartmanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_AddDoctorDepartmanActionPerformed

    private void tf_AddDoctorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_AddDoctorNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_AddDoctorNameActionPerformed

    private void tf_AddDoctorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_AddDoctorIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_AddDoctorIdActionPerformed

    private void AddDoctorSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDoctorSaveButtonActionPerformed
                
                if (this.tf_AddDoctorDepartman.getText().isEmpty() || 
                this.tf_AddDoctorName.getText().isEmpty() ||
                this.tf_AddDoctorAge.getText().isEmpty() || this.tf_AddDoctorId.getText().isEmpty() || this.tf_AddDoctorPassword.getText().isEmpty()
                 || this.tf_AddDoctorEmail.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter all the details");
        }
         
         else {
                    populateArrayList();
            String AddDoctorDepartman = tf_AddDoctorDepartman.getText().trim();
            String AddDoctorName = tf_AddDoctorName.getText().trim();
            String AddDoctorAge = tf_AddDoctorAge.getText().trim();
            String AddDoctorId = tf_AddDoctorId.getText().trim();
            String AddDoctorPassword = tf_AddDoctorPassword.getText().trim();
            if(tf_AddDoctorLocation.getSelectedItem().equals("Ataşehir")){
                AddDoctorLocation="Ataşehir";
            
            }else if(tf_AddDoctorLocation.getSelectedItem().equals("Mecidiyeköy")){
                AddDoctorLocation="Mecidiyeköy";
            } else{
                AddDoctorLocation="Pendik";
            
            }
            
            String AddDoctorEmail = tf_AddDoctorEmail.getText().trim();
            
            
            
            Doctor dctr = new Doctor(AddDoctorDepartman,AddDoctorName,AddDoctorAge,AddDoctorId,AddDoctorPassword,AddDoctorLocation,AddDoctorEmail);
            doctors.add(dctr);
            
            
            saveEmployeesToFile();
        }

    }//GEN-LAST:event_AddDoctorSaveButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cb_RemoveNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_RemoveNameActionPerformed

    }//GEN-LAST:event_cb_RemoveNameActionPerformed

    private void cb_RemoveNameİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_RemoveNameİtemStateChanged

    }//GEN-LAST:event_cb_RemoveNameİtemStateChanged

    private void cb_RemoveDoctorLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_RemoveDoctorLocationActionPerformed
        populateArrayList();

        if(cb_RemoveDoctorLocation.getSelectedItem().equals("Atasehir")){
            cb_RemoveName.removeAllItems();
            cb_RemoveDoctorDepartman.removeAllItems();

            for(int i=0;i<name.size();i++){
                if(location.get(i).compareTo("Ataşehir")==0){

                    cb_RemoveName.addItem(name.get(i));
                    cb_RemoveDoctorDepartman.addItem(departman.get(i));
                }

            } }

            else if(cb_RemoveDoctorLocation.getSelectedItem().equals("Pendik")){
                cb_RemoveName.removeAllItems();
                cb_RemoveDoctorDepartman.removeAllItems();

                for(int i=0;i<name.size();i++){
                    if(location.get(i).compareTo("Pendik")==0){
                        cb_RemoveDoctorDepartman.addItem(departman.get(i));
                        cb_RemoveName.addItem(name.get(i));

                    }

                }}else if(cb_RemoveDoctorLocation.getSelectedItem().equals("Mecidiyeköy")){
                    cb_RemoveName.removeAllItems();
                    cb_RemoveDoctorDepartman.removeAllItems();

                    for(int i=0;i<name.size();i++){
                        if(location.get(i).compareTo("Mecidiyeköy")==0){
                            cb_RemoveDoctorDepartman.addItem(departman.get(i));
                            cb_RemoveName.addItem(name.get(i));}

                    }}
                    else if(cb_RemoveDoctorLocation.getSelectedItem().equals("Select Location")){
                        cb_RemoveName.removeAllItems();}

    }//GEN-LAST:event_cb_RemoveDoctorLocationActionPerformed

    private void cb_RemoveDoctorLocationİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_RemoveDoctorLocationİtemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_RemoveDoctorLocationİtemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        adminPanel admin=new adminPanel();
        admin.setVisible(true);
        close();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddAndRemove.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddAndRemove.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddAndRemove.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddAndRemove.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddAndRemove().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddDoctorSaveButton;
    private javax.swing.JComboBox<String> cb_RemoveDoctorDepartman;
    private javax.swing.JComboBox<String> cb_RemoveDoctorLocation;
    private javax.swing.JComboBox<String> cb_RemoveName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField tf_AddDoctorAge;
    private javax.swing.JTextField tf_AddDoctorDepartman;
    private javax.swing.JTextField tf_AddDoctorEmail;
    private javax.swing.JTextField tf_AddDoctorId;
    private javax.swing.JComboBox<String> tf_AddDoctorLocation;
    private javax.swing.JTextField tf_AddDoctorName;
    private javax.swing.JPasswordField tf_AddDoctorPassword;
    // End of variables declaration//GEN-END:variables
}
